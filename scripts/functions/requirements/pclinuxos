#!/usr/bin/env bash

requirements_pclinuxos_lib_installed()
{
  rpm -q --whatprovides "$1" >/dev/null || return $?
}

requirements_pclinuxos_lib_available()
{
  synaptic list --cacheonly --quiet "$1" >/dev/null 2>&1 || return $?
}

# required only for libyaml-devel check as fedora is broken ...
requirements_pclinuxos_lib_available_no_caching()
{
  synaptic list --quiet "$1" >/dev/null 2>&1 || return $?
}

requirements_pclinuxos_version_list()
{
  rpm -q --whatprovides "$1" | sed -e "s#^$1-##"
}

requirements_pclinuxos_libs_install()
{
  __rvm_try_sudo synaptic install -y "$@" || return $?
}

requirements_pclinuxos_update_system_install_epel()
{
  "${rvm_scripts_path}/fetch" "${epel_key}"
  "${rvm_scripts_path}/fetch" "${epel_rpm}"
  __rvm_try_sudo rpm --import   "${rvm_archives_path}/${epel_key##*/}"
  __rvm_try_sudo rpm --quiet -i "${rvm_archives_path}/${epel_rpm##*/}" &&
  __rvm_try_sudo synaptic-config-manager -q --enable epel ||
  {
    typeset __ret=$?
    rvm_error "Error installing EPEL, it is required for libyaml-devel,
either there was an error installing EPEL package,
or there was problem checking if libyaml-devel is available / installed."
    return ${__ret}
  }
}

# not sure if this one is needed for pclinuxos, copied from centos
requirements_pclinuxos_update_system_check_epel()
{
  [[ " ${packages_to_install[*]} " =~ " libyaml-devel " ]] || return 0
  # if you change this, change the scripts/functions/pkg version too
  [[ -f /etc/synaptic.repos.d/epel.repo ]] ||
  requirements_pclinuxos_lib_installed libyaml-devel ||
  requirements_pclinuxos_lib_available_no_caching libyaml-devel ||
  {
    typeset version="${_system_version%%.*}"
    __rvm_db "epel${version}_key" "epel_key"
    __rvm_db "epel${version}_rpm" "epel_rpm"
    if
      [[ -z "$epel_rpm" || -z "$epel_key" ]]
    then
      rvm_error "There is no 'libyaml-devel' package available for installation and RVM does not know how to make that happen,
please tell us how to install 'libyaml-devel' on '${_system_name}-${_system_version}' here: https://github.com/wayneeseguin/rvm/issues"
      return 49
    fi
    rvm_requiremnts_fail_or_run_action 2 \
      "It is not possible to install EPEL repository for YAML, install it using: $epel_rpm" \
      __rvm_log_command pclinuxos_install_epel "Installing EPEL repository" requirements_pclinuxos_update_system_install_epel ||
      return $?
  }
}

requirements_pclinuxos_update_system()
{
  requirements_pclinuxos_update_system_check_epel || return $?
}

requirements_pclinuxos_check_binary()
{
  {
    __rvm_which update-alternatives >/dev/null &&
    update-alternatives --display "$1" >/dev/null 2>&1
  } ||
  __rvm_which "$1" >/dev/null || return $?
}

requirements_pclinuxos_define()
{
  case "$1" in
    (rvm)
      requirements_check bash curl patch
      ;;
    (jruby*)
      if
        is_head_or_disable_binary "$1"
      then
        requirements_pclinuxos_check_binary javac ||
          requirements_check_fallback java-1.7.0-openjdk-devel java-devel
        requirements_check git
        if is_jruby_post17 "$1"
        then requirements_check_custom_after mvn=maven
        fi
      else
        requirements_pclinuxos_check_binary java ||
          requirements_check_fallback java-1.7.0-openjdk java
      fi
      ;;
    (ir*)
      true # not that easy
      ;;
    (opal)
      true # not that easy
      ;;
    (*-head)
      requirements_check git
      requirements_pclinuxos_define "${1%-head}"
      ;;
    (*)
      if [[ "${_system_name} ${_system_arch}" == "Mageia x86_64" ]]
      then requirements_check lib64yaml-devel
      else requirements_check libyaml-devel
      fi
      if
        [[ "${_system_name_lowercase}" == "redhat" && ${_system_version:-0} -ge 6 ]] &&
        ! requirements_pclinuxos_lib_available libffi-devel
      then
        rvm_warn "
Skipping installation of 'libffi-devel', in case you depend on FFI reinstall your ruby after following this instructions:
    https://gist.github.com/rderoldan1/5920539
"
      else
        requirements_check libffi-devel
      fi
      if [[ "${_system_name}" != "Mageia" ]]
      then requirements_check glibc-headers
      fi
      if [[ ${#rvm_patch_names[@]} -gt 0 ]] || [[ "$1" == *"-head" ]]
      then requirements_version_minimal autoconf 2.67
      else requirements_check autoconf
      fi
      requirements_check gcc-c++ glibc-devel patch readline readline-devel zlib zlib-devel openssl-devel make bzip2 automake libtool bison
      ;;
  esac
}

requirements_pclinuxos_before_install_sudo()
{
  rvm_warn "Installing sudo (root password required):"
  su -c "synaptic install -y sudo" || true
}

requirements_pclinuxos_before()
{
  __rvm_which sudo >/dev/null 2>&1 ||
    rvm_requiremnts_fail_or_run_action 2 "No sudo available" \
      requirements_pclinuxos_before_install_sudo || return $?
}
